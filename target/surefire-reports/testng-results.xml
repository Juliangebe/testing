<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-11-09T17:04:16 COT" name="SuiteName" finished-at="2023-11-09T17:05:13 COT" duration-ms="57724">
    <groups>
    </groups>
    <test started-at="2023-11-09T17:04:16 COT" name="FillFormTest" finished-at="2023-11-09T17:04:31 COT" duration-ms="15540">
      <class name="com.DemoLogin.FillFormTest">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.DemoLogin.FillFormTest@6f10d5b6]" started-at="2023-11-09T17:04:16 COT" name="setUp" finished-at="2023-11-09T17:04:19 COT" duration-ms="2812" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.DemoLogin.FillFormTest.FillForm()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="FillForm()[pri:0, instance:com.DemoLogin.FillFormTest@6f10d5b6]" started-at="2023-11-09T17:04:19 COT" name="FillForm" description="Filling form" finished-at="2023-11-09T17:04:30 COT" duration-ms="10948" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FillForm -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.DemoLogin.FillFormTest@6f10d5b6]" started-at="2023-11-09T17:04:30 COT" name="tearDown" finished-at="2023-11-09T17:04:31 COT" duration-ms="1696" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FillForm status=SUCCESS method=FillFormTest.FillForm()[pri:0, instance:com.DemoLogin.FillFormTest@6f10d5b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.DemoLogin.FillFormTest@6f10d5b6]" started-at="2023-11-09T17:04:31 COT" name="tearDown" finished-at="2023-11-09T17:04:31 COT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.DemoLogin.FillFormTest -->
    </test> <!-- FillFormTest -->
    <test started-at="2023-11-09T17:04:31 COT" name="DemoRegisterTest" finished-at="2023-11-09T17:04:57 COT" duration-ms="26132">
      <class name="com.DemoLogin.DemoRegisterTest">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.DemoLogin.DemoRegisterTest@338fc1d8]" started-at="2023-11-09T17:04:31 COT" name="setUp" finished-at="2023-11-09T17:04:32 COT" duration-ms="1169" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.DemoLogin.DemoRegisterTest.assertTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="assertTest()[pri:0, instance:com.DemoLogin.DemoRegisterTest@338fc1d8]" started-at="2023-11-09T17:04:32 COT" name="assertTest" description="Testing assertions" finished-at="2023-11-09T17:04:40 COT" duration-ms="7764" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- assertTest -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.DemoLogin.DemoRegisterTest@338fc1d8]" started-at="2023-11-09T17:04:40 COT" name="tearDown" finished-at="2023-11-09T17:04:41 COT" duration-ms="412" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=assertTest status=SUCCESS method=DemoRegisterTest.assertTest()[pri:0, instance:com.DemoLogin.DemoRegisterTest@338fc1d8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.DemoLogin.DemoRegisterTest@338fc1d8]" started-at="2023-11-09T17:04:41 COT" name="setUp" finished-at="2023-11-09T17:04:42 COT" duration-ms="1068" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.DemoLogin.DemoRegisterTest.signUp() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="signUp()[pri:0, instance:com.DemoLogin.DemoRegisterTest@338fc1d8]" started-at="2023-11-09T17:04:42 COT" name="signUp" description="Sign up test" finished-at="2023-11-09T17:04:54 COT" duration-ms="12143" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.DemoLogin.DemoRegisterTest@338fc1d8]" started-at="2023-11-09T17:04:54 COT" name="tearDown" finished-at="2023-11-09T17:04:57 COT" duration-ms="3567" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUp status=SUCCESS method=DemoRegisterTest.signUp()[pri:0, instance:com.DemoLogin.DemoRegisterTest@338fc1d8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.DemoLogin.DemoRegisterTest@338fc1d8]" started-at="2023-11-09T17:04:57 COT" name="tearDown" finished-at="2023-11-09T17:04:57 COT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.DemoLogin.DemoRegisterTest -->
    </test> <!-- DemoRegisterTest -->
    <test started-at="2023-11-09T17:04:58 COT" name="BaseClassTest" finished-at="2023-11-09T17:05:03 COT" duration-ms="5532">
      <class name="com.DemoLogin.BaseClassTest">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.DemoLogin.BaseClassTest@65f8f5ae]" started-at="2023-11-09T17:04:58 COT" name="setUp" finished-at="2023-11-09T17:04:59 COT" duration-ms="1497" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.DemoLogin.BaseClassTest.failingTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="failingTest()[pri:0, instance:com.DemoLogin.BaseClassTest@65f8f5ae]" started-at="2023-11-09T17:04:59 COT" name="failingTest" description="Testing a failing test" finished-at="2023-11-09T17:05:02 COT" duration-ms="3423" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at com.DemoLogin.BaseClassTest.failingTest(BaseClassTest.java:19)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failingTest -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.DemoLogin.BaseClassTest@65f8f5ae]" started-at="2023-11-09T17:05:02 COT" name="tearDown" finished-at="2023-11-09T17:05:03 COT" duration-ms="600" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=failingTest status=FAILURE method=BaseClassTest.failingTest()[pri:0, instance:com.DemoLogin.BaseClassTest@65f8f5ae] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.DemoLogin.BaseClassTest@65f8f5ae]" started-at="2023-11-09T17:05:03 COT" name="tearDown" finished-at="2023-11-09T17:05:03 COT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.DemoLogin.BaseClassTest -->
    </test> <!-- BaseClassTest -->
    <test started-at="2023-11-09T17:05:03 COT" name="BaseClassTest1" finished-at="2023-11-09T17:05:13 COT" duration-ms="10374">
      <class name="com.DemoLogin.BaseClassTest1">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:com.DemoLogin.BaseClassTest1@5c7933ad]" started-at="2023-11-09T17:04:16 COT" name="beforeSuite" finished-at="2023-11-09T17:04:16 COT" duration-ms="20" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.DemoLogin.BaseClassTest1@5c7933ad]" started-at="2023-11-09T17:05:03 COT" name="setUp" finished-at="2023-11-09T17:05:05 COT" duration-ms="1426" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.DemoLogin.BaseClassTest1.youtubeTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="youtubeTest()[pri:0, instance:com.DemoLogin.BaseClassTest1@5c7933ad]" started-at="2023-11-09T17:05:05 COT" name="youtubeTest" description="Youtube test" finished-at="2023-11-09T17:05:12 COT" duration-ms="7933" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- youtubeTest -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.DemoLogin.BaseClassTest1@5c7933ad]" started-at="2023-11-09T17:05:12 COT" name="tearDown" finished-at="2023-11-09T17:05:13 COT" duration-ms="1013" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=youtubeTest status=SUCCESS method=BaseClassTest1.youtubeTest()[pri:0, instance:com.DemoLogin.BaseClassTest1@5c7933ad] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.DemoLogin.BaseClassTest1@5c7933ad]" started-at="2023-11-09T17:05:13 COT" name="tearDown" finished-at="2023-11-09T17:05:13 COT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.DemoLogin.BaseClassTest1 -->
    </test> <!-- BaseClassTest1 -->
  </suite> <!-- SuiteName -->
</testng-results>
